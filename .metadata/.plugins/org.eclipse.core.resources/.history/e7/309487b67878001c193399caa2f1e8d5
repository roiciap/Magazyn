package projekt;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.io.*;

public class Client {
	

	/*public void Dodawanie(Magazyn m) {

		Scanner scan = new Scanner(System.in);
		String odp;
		int cena;
		System.out.print("typ produktu(1.waga 2.ilosc): ");
			odp=scan.next();
			if(odp.equals("1")) {

			System.out.print("Podaj id (7 znakow): ");
			int SKU,prefix;
			prefix=scan.nextInt();
			if(prefix<1000000) {
				System.out.println("kod jest za krotki");
				return;
			}

			SKU=prefix%100000;
			prefix=(prefix-SKU)/100000;
			
			
			System.out.println("Podaj cene: ");
			odp=scan.next();
			cena=Integer.parseInt(odp);
			
			System.out.println("Podaj nazwe: ");
			odp=scan.next();
			

			
			ProduktWagaBuilder br=new ProduktWagaBuilder();
			br.setPrefix(prefix);
			br.setSKU(SKU);
			br.setNazwa(odp);
			br.setCena(cena);
			ProduktWaga p=br.getProdukt();
			
			System.out.print("Podaj sektor: ");
			System.out.println(m.wypiszSektory());
			odp=scan.next();
			m.DodajProdukt(odp, p);
			///wyslij "ADDNEWITEM"=+p.getString()+"="+odp;
			}
			if(odp.equals("2")) {
				int Kraj,Produkt,Producent,kont;
				System.out.print("Podaj id (13 znakow): ");
				odp=scan.next();
				if(odp.length()!=13) {
					System.out.print("Nieprawidlowy kod");
					return;
				}
				Kraj=Integer.parseInt(odp.substring(0, 3));
				Producent=Integer.parseInt(odp.substring(3,7));
				Produkt=Integer.parseInt(odp.substring(7,12));
				kont=Integer.parseInt(odp.substring(12));
				ProduktIloscBuilder bi=new ProduktIloscBuilder();
				bi.setProduktID(Produkt);
				bi.setProducentID(Producent);
				bi.setKrajID(Kraj);
				bi.setKontrolnyID(kont);
				
				System.out.print("Podaj cene: ");
				odp=scan.next();
				cena=Integer.parseInt(odp);
				bi.setCena(cena);
				
				System.out.print("Podaj nazwe: ");
				odp=scan.next();
				bi.setNazwa(odp);
				ProduktIlosc p=bi.getProdukt();
				
				System.out.print("Podaj sektor: ");
				System.out.println(m.wypiszSektory());
				odp=scan.next();
				m.DodajProdukt(odp, p);
				///wyslij "ADDNEWITEM"=+p.getString()+"="+odp;
			}

	}

	
	public void Usuwanie(Magazyn m) {
		System.out.println(m.sektory.getString());
		System.out.println("podaj kod produktu ktory chcesz usunac/n");
		Scanner scan = new Scanner(System.in);
		String odp;
		odp=scan.next();
		
		m.sektory.usunProdukt(odp);
		//"DELETEITEM="+odp
		


	}
	
	public void Tranzakcja(Magazyn m) {
		System.out.println("1.Zakup/n2.Sprzedaz");
		Scanner scan = new Scanner(System.in);
		String odp;
		odp=scan.next();
		TworzenieTranzakcji t;
		if(odp.equals("1")) {
			t=new TworzenieTranzakcjiZakupu();
		}
		else if(odp.equals("2")) {
			t=new TworzenieTranzakcjiSprzedazy();
		}
		else {
			return;
		}
		
		while(true) {
			System.out.println("1.Dodaj Produkt");
			System.out.println("2.Dokonaj tranzakcji");
			
			odp=scan.next();
			if(odp.equals("1")) {
				System.out.println("podaj ilosc");
				int ilosc=scan.nextInt();
				System.out.println("podaj kod");
				odp=scan.next();
				t.DodajProdukt(odp, ilosc);
			}
			if(odp.equals("2")) {
				t.stworz(m);
				break;
			}
		}

	}
	
	public void sektor(Magazyn m) {
		System.out.println("Podaj nazwe setoru: ");
		Scanner scan = new Scanner(System.in);
		String odp;
		odp=scan.next();
		Sektor nowy =new Sektor(odp);
		m.DodajSektor(nowy);
	}
	
	public void inwentaryzacja(Magazyn m) {
		String odp,kod;
		int ilosc;
		Scanner scan = new Scanner(System.in);
		Inwentaryzacja inw=new Inwentaryzacja();
		while(true) {
			System.out.println("1.Zeskanuj\n2.edytuj\n3.Sprawdz\n4.Wykonaj\n10.Porzuc ");
			odp=scan.next();
			if(odp.equals("1")) {
				System.out.println("podaj kod");
				kod=scan.next();
				System.out.println("podaj ilosc");
				ilosc=scan.nextInt();	
				inw.zeskanuj(kod, ilosc);
			}
			if(odp.equals("2")) {
				System.out.println("podaj kod");
				kod=scan.next();
				System.out.println("podaj ilosc zmiany");
				ilosc=scan.nextInt();	
				inw.edytuj(kod, ilosc);
			}
			if(odp.equals("3")) {
				System.out.println(inw.getString());
			}
			if(odp.equals("4")) {
				System.out.println(inw.wykonaj(m));
				break;
			}
			if(odp.equals("10")) {
				break;
			}
		}
	}
	
	public void menu() {
		System.out.println("____________________________________");
		System.out.println("Wybierz:");
		System.out.println("0.wyjdz\n1.Dodaj produkt \n"
				+ "2.Usun produkt\n"
				+ "3.Lista wszystkich produktow\n"
				+ "4.Tranzakcja \n"
				+ "5.Dodaj sektor \n"
				+ "6.Inwentaryzacja\n"
				+ "7.Zapisz\n"
				+"8.Odczytaj\n");
	}
	
	
	
	public static void main(String[] args) {
		///////////////////////////////////////////
		///tworzenie poczatkowego stanu magazynu///
		///////////////////////////////////////////
	/*	try {
			//socket itd itp
			
			work();
		
				}
		catch (IOException e) {
			e.printStackTrace();
	 	}
		}
	
	public static void work() throws IOException {*/
		///////////////////////////////////////////
		/*	Sektor s=new Sektor("A");
		ProduktIloscBuilder bi=new ProduktIloscBuilder();
		bi.setProduktID(11111);
		bi.setProducentID(1111);
		bi.setKrajID(111);
		bi.setKontrolnyID(1);
		bi.setCena(123);
		bi.setNazwa("produkt1");
		ProduktIlosc p1,p2;
		p1=bi.getProdukt();
		bi.setProduktID(22222);
		bi.setProducentID(2222);
		bi.setKrajID(122);
		bi.setKontrolnyID(2);
		bi.setCena(123);
		bi.setNazwa("produkt2");
		p2=bi.getProdukt();
		
		s.dodajProdukt(s.nazwa,p1);
		s.dodajProdukt(s.nazwa,p2);
		
		
		Magazyn m=new Magazyn();
		m.DodajSektor(s);
		///////////////////////////////////////////
		int a;
		boolean dzialaj=true;
		Scanner scan = new Scanner(System.in);
		while(dzialaj) {
			menu();

			a=scan.nextInt();
			
			switch(a) {
			case 0:
				dzialaj=false;
				break;
			case 1:
				Dodawanie(m);
				break;
			case 2:
				Usuwanie(m);
				break;
			case 3:
				System.out.println(m.sektory.getString());
				System.out.println(m.wypiszSektory());
				break;
			case 4:
				Tranzakcja(m);
				break;
			case 5:
				sektor(m);
				break;
			case 6:
				inwentaryzacja(m);
				break;
			
			case 7:
				m.save();
				break;
			case 8:
				m.load();
				break;
			}


			
			
		}
}*/
}

	
		
		
		
		
